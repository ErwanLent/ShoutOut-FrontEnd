{
  "author": {
    "name": "Matt Sergeant",
    "url": "matt@hubdoc.com"
  },
  "name": "node-phantom-simple",
  "description": "Simple and reliable bridge between Node.js and PhantomJS",
  "version": "1.2.0",
  "homepage": "https://github.com/baudehlo/node-phantom-simple",
  "repository": {
    "type": "git",
    "url": "git://github.com/baudehlo/node-phantom-simple.git"
  },
  "main": "node-phantom-simple.js",
  "scripts": {
    "test": "./run_tests"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": ""
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "Node-phantom-simple\n---------------\n\nThis is a bridge between [PhantomJs](http://phantomjs.org/) and\n[Node.js](http://nodejs.org/).\n\nThis module is API compatible with node-phantom but doesn't rely on WebSockets\nor socket.io. In essence the communication between Node and Phantom has been\nmade significantly simpler. It has the following advantages over node-phantom:\n\n  - Fewer dependencies/layers.\n  - Just uses the HTTP server module built into Node.\n  - Doesn't use the unreliable and huge socket.io.\n  - Works under `cluster` (node-phantom does not due to how `server.listen(0)`\n    works in cluster)\n\nRequirements\n------------\nYou will need to install PhantomJS first. The bridge assumes that the\n\"phantomjs\" binary is available in the PATH, or you will need to pass its path\ninto the `phantom.create() method.\n\nFor running the tests you will need [Expresso](http://visionmedia.github.com/expresso/).\nThe tests require PhantomJS 1.6 or newer to pass.\n\nInstalling\n----------\n\n    npm install node-phantom-simple\n\n\nUsage\n-----\nYou can use it exactly like you would use Node-Phantom, and the entire API of\nPhantomJS should work, with the exception that every method call takes a\ncallback (always as the last parameter) instead of returning values.\n\nFor example this is an adaptation of a\n[web scraping example](http://net.tutsplus.com/tutorials/javascript-ajax/web-scraping-with-node-js/) :\n\n```javascript\nvar phantom=require('node-phantom-simple');\nphantom.create(function(err,ph) {\n  return ph.createPage(function(err,page) {\n    return page.open(\"http://tilomitra.com/repository/screenscrape/ajax.html\", function(err,status) {\n      console.log(\"opened site? \", status);\n      page.includeJs('http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js', function(err) {\n        //jQuery Loaded.\n        //Wait for a bit for AJAX content to load on the page. Here, we are waiting 5 seconds.\n        setTimeout(function() {\n          return page.evaluate(function() {\n            //Get what you want from the page using jQuery. A good way is to populate an object with all the jQuery commands that you need and then return the object.\n            var h2Arr = [],\n            pArr = [];\n            $('h2').each(function() {\n              h2Arr.push($(this).html());\n            });\n            $('p').each(function() {\n              pArr.push($(this).html());\n            });\n\n            return {\n              h2: h2Arr,\n              p: pArr\n            };\n          }, function(err,result) {\n            console.log(result);\n            ph.exit();\n          });\n        }, 5000);\n      });\n\t});\n  });\n});\n```\n\n### phantom.create(callback, options)\n\n`options` is an optional object with options for how to start PhantomJS.\n`options.parameters` is an array of parameters that will be passed to PhantomJS\non the commandline.\n\nFor example\n\n```javascript\nphantom.create(callback, {parameters: {'ignore-ssl-errors': 'yes'}})\n```\n\nwill start phantom as:\n\n```bash\nphantomjs --ignore-ssl-errors=yes\n```\n\nYou may also pass in a custom path if you need to select a specific instance\nof PhantomJS or it is not present in PATH environment. This can for example\nbe used together with the [PhantomJS package](https://npmjs.org/package/phantomjs)\nlike so:\n\n```javascript\nphantom.create(callback, {phantomPath: require('phantomjs').path})\n```\n\nYou can also have a look at the test folder to see some examples of using the\nAPI, however the de-facto reference is the\n[PhantomJS documentation](https://github.com/ariya/phantomjs/wiki/API-Reference).\nJust change all return values into callbacks.\n\n`options.ignoreErrorPattern` is a regular expression that can be used to silence spurious\nwarnings generated by qt and phantomjs.\n\nOn Mavericks, you can use: `{ignoreErrorPattern: /CoreText/}` to suppress some common annoying font-related warnings.\n\nWebPage Callbacks\n-----\n\nAll of the WebPage callbacks have been implemented including `onCallback`, and\nare set the same way as with the core phantomjs library:\n\n```javascript\npage.onResourceReceived = function(response) {\n    console.log('Response (#' + response.id + ', stage \"' + response.stage + '\"): ' + JSON.stringify(response));\n};\n```\n\nThis includes the `onPageCreated` callback which receives a new `page` object.\n\nProperties\n-----\n\nProperties on the [WebPage](https://github.com/ariya/phantomjs/wiki/API-Reference-WebPage)\nand [Phantom](https://github.com/ariya/phantomjs/wiki/API-Reference-phantom)\nobjects are accessed via the `get()/set()` method calls:\n\n```javascript\npage.get('content', function (err,html) {\n  console.log(\"Page HTML is: \" + html);\n})\npage.set('zoomfactor', 0.25, function () {\n  page.render('capture.png');\n})\n```\n\nLicense - MIT\n-----\n\nCopyright (c) 2013 Matt Sergeant\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\nOther\n-----\nMade by Matt Sergeant for Hubdoc Inc.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/baudehlo/node-phantom-simple/issues"
  },
  "_id": "node-phantom-simple@1.2.0",
  "dist": {
    "shasum": "69da18bb793fa12f6061e9d6aac58343477345a2"
  },
  "_from": "node-phantom-simple@~1.2.0",
  "_resolved": "https://registry.npmjs.org/node-phantom-simple/-/node-phantom-simple-1.2.0.tgz"
}
